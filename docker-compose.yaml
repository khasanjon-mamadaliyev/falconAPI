version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: ./compose/django-docker/Dockerfile
    container_name: web_falcon
    image: image_falcon
    restart: always
    command: /start
    volumes:
      - .:/app
    ports:
      - "8010:8000"
    env_file:
      - .env
    depends_on:
      - redis
      - db

  db:
    image: postgres:alpine
    container_name: postgres_falcon
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    environment:
      - POSTGRES_PASSWORD=1
      - POSTGRES_USER=postgres
      - POSTGRES_DB=falcon
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    container_name: redis_falcon
    restart: always
    volumes:
      - .:/app
    ports:
      - "6379:6379"

  celery_worker:
    build:
      context: .
      dockerfile: ./compose/django-docker/Dockerfile
    container_name: celery_worker_falcon
    image: celery_worker
    restart: always
    command: /start-celeryworker
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

  #  celery_beat:
  #    build:
  #      context: .
  #      dockerfile: ./compose/django-docker/Dockerfile
  #    container_name: celery_beat_falcon
  #    image: celery_beat
  #    command: /start-celerybeat
  #    volumes:
  #      - .:/app
  #    env_file:
  #      - .env
  #    depends_on:
  #      - redis
  #      - db

  flower:
    build:
      context: .
      dockerfile: ./compose/django-docker/Dockerfile
    image: flower_falcon
    container_name: flower_falcon
    restart: always
    command: /start-flower
    env_file:
      - .env
    ports:
      - "5557:5555"
    depends_on:
      - celery_worker
      - redis
      - db
    volumes:
      - .:/app
volumes:
  postgres_data: